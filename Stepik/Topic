HTML
Теперь мы знаем, что такое разметка, давай узнаем, что такое HTML. Есть вещи, которые проще показать, чем объяснить. HTML - одна из них.
Всё гениальное просто. Вот как бы выглядел текст этого урока на HTML:

<h1>HTML</h1>
<p>Теперь мы знаем, что такое <i>разметка</i>, давай узнаем, что такое HTML. Есть вещи, которые проще показать, чем объяснять. HTML - одна из них.</p>

<p>Всё гениальное просто. Вот как бы выглядел текст этого урока на HTML:</p>

h1 - заголовок первого уровня (header 1)
p - абзац (paragraph)

Существует заголовок первого уровня, который содержит текст "Война и мир"
<h1>Война и мир</h1>

Двойные теги показывают начало и конец элемента. Начало элемента обозначается открывающим тегом <…> , а конец - закрывающим </…>.
Одинарные теги просто не имеют пары. Примеры: тег переноса строки <br> или горизонтальной линии <hr>.
Теги можно вкладывать друг в друга. Пример:
<p>
 <em>Курсив внутри абзаца</em>
</p>
Но при вложении тега нужно всегда помнить о том, что внутренний тег нужно закрывать раньше внешнего.
Атрибуты — это свойства тега. С помощью них мы задаём параметры тега.
Сразу возьмём пример: тег <a> — ссылка. Для задания адреса, куда будет вести эта ссылка, нам понадобится атрибут href. 
Вот так будет выглядеть ссылка на страницу ITC Вконтакте:

<a href="https://vk.com/itc.digital">ITC Вконтакте</a>

Атрибут указывается внутри тега, значение атрибута указывается внутри кавычек. Атрибуты отделяются друг от друга пробелами. 
Пример ссылки на страницу ITC, которая откроется в новой вкладке:

<a href="https://vk.com/itc.digital" target="_blank">ITC Вконтакте</a>

У атрибута может не быть значения, тогда наличие атрибута включает какой-то параметр, а отсутствие - отключает. 
Например, атрибут disabled. Если кнопке <button> задать атрибут disabled, она станет серой и на неё невозможно будет нажать.
<button disabled>Нельзя нажимать</button>

Особенности интерпретации HTML
При преобразовании HTML-кода в веб-страничку есть некоторые особенности, в которых мы сейчас разберёмся.
Перенос строки только через тег
Возможно, у тебя возник вопрос, зачем нужен тег переноса строки, если можно просто нажать энтер. 
Дело в том, что HTML воспринимает перенос строки как пробел. Это нужно потому, что редакторы кода не переносят 
строки, которые не помещаются в экран - так удобнее писать код. Поэтому чтобы длинный текст влезал в экран, в коде ставятся переносы строки, 
которые не нужны, когда страница показывается в браузере.
Несколько пробелов, идущих подряд, считаются за один
Это происходит по той же причине, что и с переносом строки. Так просто удобнее форматировать код в редакторе. 
Из-за того, что теги вкладываются друг в друга, для удобного восприятия кода вложенность показывают отступами - пробелами.

Произвольный регистр
<br> даст такой же результат, что и <BR>, и <Br>, и <bR>. Несмотря на это, писать разметку лучше в нижнем регистре - это негласное правило.

Перенос строки в теге
При определении тега и его атрибутов можно переносить строку. Это полезно для длинных определений.

Структура HTML-документа
Структура HTML документа - скелет, на основе которого строится вся страница:

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Страница</title>
  </head>
  <body>
    <h1>...</h1>
    <p>...</p>
  </body>
</html>

<!DOCTYPE>
Первым тегом в любом HTML документе должен идти тег <!DOCTYPE>. Он говорит браузеру, по какому стандарту написана страница. 
На рассвете веба HTML существовал в разных несовместимых версиях, поэтому для их одновременной поддержки нужно было указывать версию явно. 
Сейчас все пришли к одному стандарту - HTML5. Поэтому для всех сайтов, которые создаются сегодня, нужно указывать <!DOCTYPE html> - так обозначается HTML5.

<html>
Вторым тегом идет <html> - контейнер, который содержит два тега - <head> и <body>. HTML-страница должна заканчиваться закрытым тегом </html>.

<head>
В теге <head> хранится информация о странице. Здесь указывают кодировку <meta charset="...">, имя страницы <title>...</title>, 
специальную информацию для поисковиков, а ещё тут подключаются стилевые файлы и скрипты.

Тег <head> не отображается. Его цель — сказать браузеру информацию о странице.

<body>
В теге <body> размещается весь контент страницы, который пользователь увидит в браузере.

Редакторы кода: Notepad++, Sublime Text, Atom, Visual Studio Code.

Сниппет для HTML
В VSCode можно быстро вставить шаблон HTML-документа. Для этого нужно открыть пустой .html файл, написать ! или html:5 и нажать Tab. 
Теперь у нас есть структура нашей будущей веб-страницы.

Элементы и их виды
Элементы - то, что создаётся тегами. Можно сказать, что теги это текстовое представление элементов. Элементы бывают двух видов:

Блочные элементы
Составляют структуру страницы.

Особенности:

блоки располагаются друг под другом по вертикали
запрещено вставлять блочный элемент внутрь строчного
занимают всё допустимое пространство по ширине
высота вычисляется автоматически, исходя из содержимого
Примеры:

абзацы <р>
списки: маркированные (с маркером) <ul> и нумерованные (с числами) <ol>
заголовки: от первого уровня <h1> до шестого уровня <h6>
статьи <article>
разделы <section>
длинные цитаты <blockquote>
блоки общего назначения  <div>

Строчные элементы
Используются для форматирования текстовых фрагментов. Обычно содержат одно или несколько слов.

Особенности:

элементы, идущие подряд, располагаются на одной строке и переносятся на другую при необходимости
внутрь допустимо вставлять текст или другие строчные элементы, помещать блочные элементы - запрещено
Примеры:

ссылки <a>
выделенные слова <em>
важные слова <strong>
короткие цитаты <q>
аббревиатуры <abbr>

Если ты запомнишь только одну вещь из этого урока, запомни, что:
блочные элементы занимают всё доступное пространство по ширине
строчные элементы ведут себя как текст - выстраиваются в ряд по горизонтали и переносятся на следующую строчку, если не хватает места.
<р> -- paragraph
<ul> -- unordered list
<ol> -- ordered list
<h1> -<h6> -- header
<div> -- division (раздел)
<a> -- anchor
<em> -- emphasis

Списки
В HTML существует три вида списков:

Маркированный
Список из неупорядоченных элементов.
Состоит из двух тегов:

<ul> (unordered list) - тег начала и конца списка
<li> (list item) - пункт списка
Пример:
Список ингредиентов:
<ul>
 <li>Картошка</li>
 <li>Морковка</li>
 <li>Свекла</li>
</ul>

Нумерованный
Упорядоченный список, каждый пункт имеет свой номер.
Состоит из двух тегов:

<ol> (ordered list) - тег начала и конца списка
<li> (list item) - пункт списка
Пример:

Инструкция по приготовлению:
<ol>
 <li>Довести воду до кипения</li>
 <li>Засыпать ингредиенты</li>
 <li>Варить 10 минут</li>
</ol>

Список определений
Используются для создания списка терминов и их определений. В общем случае, каждый пункт — это пара "имя/значение".
Состоит из трёх тегов:

<dl> (description list) - тег начала и конца списка
<dt> (term) - термин
<dd> (description) - определение
Пример:

<dl>
 <dt>Гаспачо</dt><dd>лёгкий холодный суп из перетёртых в пюре свежих овощей</dd>
 <dt>Том-ям</dt><dd>кисло-острый суп на основе куриного бульона с креветками, курицей, рыбой или другими морепродуктами</dd>
 <dt>Борщ</dt><dd>разновидность супа на основе свёклы, которая придаёт борщу характерный красный цвет</dd>
</dl>

Вложенные списки
Списки можно вкладывать друг в друга. Для этого в элемент списка вставляется ещё один список. Можно вкладывать списки любого вида друг в друга в любой последовательности.
Пример:

<ul>
  <li>Омлет
    <ul>
      <li>Молоко</li>
      <li>Яйца</li>
    </ul>
  </li>
  <li>Блинчики
    <ul>
      <li>Молоко</li>
      <li>Яйца</li>
      <li>Мука</li>
      <li>Сахар</li>
      <li>Соль</li>
      <li>Разрыхлитель</li>
    </ul>
  </li>
  <li>Торт</li>
  <li>Пирог</li>
</ul>
 
Результат:
Омлет
Молоко
Яйца
Блинчики
Молоко
Яйца
Мука
Сахар
Соль
Разрыхлитель
Торт
Пирог

Изображения
Для добавления изображения используется тег <img>. Это одинарный тег. Вот его основные атрибуты:

src - ссылка на картинку
alt - текст, который отображается вместо картинки, если она не загрузилась
title - текст, который отображается при наведении мыши на картинку
width - ширина картинки в пикселях
height - высота картинки в пикселях

В HTML 5 появились теги для оформления объектов ﻿с подписями﻿ - figure и figcaption. Если твоей картинке нужна подпись - пользуйся ими. Пример кода:

<figure>
  <img src="https://www.google.ru/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png">
  <figcaption>
    Лого гугла от 2015 года
  </figcaption>
</figure>
